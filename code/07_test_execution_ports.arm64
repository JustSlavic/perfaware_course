.global _load_1x4bytes
.global _load_2x4bytes
.global _load_3x4bytes
.global _load_4x4bytes
.global _store_1x4bytes
.global _store_2x4bytes
.global _store_3x4bytes
.global _store_4x4bytes

.text
.align 2


_load_1x4bytes: ; x0 - count, x1 - data
.loop0:
    ldr     x2, [x1]
    subs    x0, x0, #1
    b.ge    .loop0
    ret

_load_2x4bytes:
.loop1:
    ldr     x2, [x1]
    ldr     x2, [x1]
    subs    x0, x0, #2
    b.ge    .loop1
    ret

_load_3x4bytes:
.loop2:
    ldr     x2, [x1]
    ldr     x2, [x1]
    ldr     x2, [x1]
    subs    x0, x0, #3
    b.ge    .loop2
    ret

_load_4x4bytes:
.loop3:
    ldr     x2, [x1]
    ldr     x2, [x1]
    ldr     x2, [x1]
    ldr     x2, [x1]
    subs    x0, x0, #4
    b.ge    .loop3
    ret

_store_1x4bytes:
.loop4:
    str     x2, [x1]
    subs    x0, x0, #1
    b.ge    .loop4
    ret

_store_2x4bytes:
.loop5:
    str     x2, [x1]
    str     x2, [x1]
    subs    x0, x0, #2
    b.ge    .loop5
    ret

_store_3x4bytes:
.loop6:
    str     x2, [x1]
    str     x2, [x1]
    str     x2, [x1]
    subs    x0, x0, #3
    b.ge    .loop6
    ret

_store_4x4bytes:
.loop7:
    str     x2, [x1]
    str     x2, [x1]
    str     x2, [x1]
    str     x2, [x1]
    subs    x0, x0, #4
    b.ge    .loop7
    ret
